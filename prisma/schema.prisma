generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model client {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
}

model feedback {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content    String   @db.VarChar(255)
  project_id String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  project    project? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String     @db.VarChar(255)
  description String?    @db.VarChar(255)
  client_id   String?    @db.Uuid
  manager_id  String?    @db.Uuid
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  feedback    feedback[]
  client      client?    @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?      @relation(fields: [manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subscription_plan {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  client      client[]
  feedback    feedback[]
  project     project[]
}
